(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[10],{"3f87":function(e,a,r){"use strict";r.r(a);var t=function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("q-header",{attrs:{elevated:""}},[r("q-toolbar",[r("perfil-miniatura",{attrs:{play:""}}),r("q-toolbar-title",[e._v("Basico")]),r("q-btn",{attrs:{icon:"close",flat:"",round:"",dense:""},on:{click:function(a){return e.endResumen()}}})],1)],1)},s=[],i=(r("e6cf"),r("7cd4")),n={name:"SupHeader",mixins:[i["a"]],components:{perfilMiniatura:()=>Promise.all([r.e(0),r.e(2)]).then(r.bind(null,"b9f3"))},data(){return{value:81}},computed:{},methods:{}},u=n,o=r("2877"),c=r("e359"),d=r("65c6"),p=r("6ac5"),l=r("9c40"),h=r("eebe"),b=r.n(h),m=Object(o["a"])(u,t,s,!1,null,"20702dbe",null);a["default"]=m.exports;b()(m,"components",{QHeader:c["a"],QToolbar:d["a"],QToolbarTitle:p["a"],QBtn:l["a"]})},"7cd4":function(e,a,r){"use strict";var t=r("ded3"),s=r.n(t),i=r("2f62");a["a"]={watch:{segundos(e){60===e&&(this.updateSegundos(0),this.increaseMinutos())}},computed:s()(s()(s()(s()(s()(s()({},Object(i["e"])("play",["banderas","opcionMultiple","banderasGeneradas","multiplesGeneradas","tipoPrueba","pruebaGenerada","opciones","correctas","incorrectas","resumenFinal"])),Object(i["e"])("perfiles",["perfil"])),Object(i["e"])("puntaje",["correctas","falsas","nivel","exp"])),Object(i["e"])("cronometro",["segundos","minutos","timer"])),Object(i["c"])("play",["buscarPruebaBandera","buscarPruebaOpcionMultiple"])),{},{_banderasGeneradas:{get(){return this.banderasGeneradas},set(e){this.insertarBanderasGeneradas(e)}},_multiplesGeneradas:{get(){return this.multiplesGeneradas},set(e){this.insertarMultiplesGeneradas(e)}}}),methods:s()(s()(s()(s()({},Object(i["d"])("play",["updateBanderasGeneradas","updateMultiplesGeneradas","updateTipoPrueba","updatePruebaGenerada","updateOpciones","insertarBanderasGeneradas","insertarMultiplesGeneradas","updateCorrectas","updateIncorrectas","increaseCorrectas","increaseIncorrectas","updateResumenFinal"])),Object(i["d"])("cronometro",["increaseSegundos","increaseMinutos","updateSegundos","updateMinutos","updateTimer","clearTimer"])),Object(i["d"])("puntaje",["updateCorrectas","updateIncorrectas","increaseCorrectas","increaseIncorrectas","updateExp","updateNivel","increaseNivel","increaseExp"])),{},{ramdon(e,a){return Math.floor(Math.random()*(a-e)+e)},tipoPruebaGenerador(){return this.ramdon(0,2)},verificarGenerado(e,a){return a.find(a=>a===e)},recursivo(e,a){let r=this.ramdon(0,a-1),t=!0;do{this.verificarGenerado(r,e)?r=this.ramdon(0,20):(e=r,t=!1)}while(t);return{array:e,numero:r}},max(e){return 0===e?this.banderas.length:this.opcionMultiple.length},array(e){return 0===e?this._banderasGeneradas:this._multiplesGeneradas},seleccionadorPrueba(e,a){return 0===e?this.buscarPruebaBandera(a):this.buscarPruebaOpcionMultiple(a)},generadorOpcionesFalsas(e){let a=[];for(let r=0;r<2;r++){let r=this.recursivo(a,e);a=r.array}return a},generarPrueba(){let e=this.tipoPruebaGenerador();const a=this.max(e);let r=this.array(e),t=this.recursivo(r,a);r=t.array;let s=t.numero;this.updateTipoPrueba(e),this.updatePruebaGenerada(this.seleccionadorPrueba(e,s))},notificacion(e){this.$q.notify({type:e?"positive":"negative",message:"Respuesta "+(e?"correcta":"incorrecta"),timeout:500})},mayusculas(e){return e.toUpperCase()},completar(e,a){let r=this.mayusculas(e)===this.mayusculas(a);this.notificacion(r),r?this.correcta():this.incorrecta(),this.generarPrueba()},correcta(){this.increaseCorrectas(),this.increaseExp(10)},upexp(){this.increaseExp(10)},incorrecta(){this.increaseIncorrectas()},pasar(){this.generarPrueba()},endResumen(){this.updateBanderasGeneradas([]),this.updateMultiplesGeneradas([]),this.updateTipoPrueba(null),this.updatePruebaGenerada(null),this.updateOpciones(null),this.clearTimer(),this.updateResumenFinal(!0)},play(){this.updateExp(this.perfil.exp),this.updateNivel(this.perfil.nivel),this.generarPrueba(),this.iniciarCronometro(),this.updateResumenFinal(!1)},endPlay(){this.updateExp(0),this.updateNivel(0),this.updateBanderasGeneradas([]),this.updateMultiplesGeneradas([]),this.updateTipoPrueba(null),this.updatePruebaGenerada(null),this.updateOpciones(null),this.updateCorrectas(0),this.updateIncorrectas(0),this.clearTimer(),this.reiniciarCronometro()},iniciarCronometro(){0===this.segundos&&this.updateTimer(setInterval(()=>{this.increaseSegundos()},1e3))},reiniciarCronometro(){clearInterval(this.timer),this.updateSegundos(0),this.updateMinutos(0)}})}}}]);